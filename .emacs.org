#+TITLE: LAEMACS (emacs configurations file)
#+AUTHOR: Andre Rosendo
#+EMAIL: andre.rosendo@hotmail.com


* Package
  Added by Package.el.  This must come before configurations of
  installed packages.  Don't delete this line.  If you don't want it,
  just comment it out by adding a semicolon to the start of the line.
  You may delete these explanatory comments.
  #+BEGIN_SRC emacs-lisp
(require 'package)
(package-initialize)
  #+END_SRC


* Package archives
  Extra archives where emacs can search for extensions
  #+BEGIN_SRC emacs-lisp
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
(add-to-list 'package-archives '("org" . "https://orgmode.org/elpa/") t)
  #+END_SRC


* Automatic Installation of Packages
** Check if packages are installed
   If packages aren't installed:
   - Refrash package repos (only does it once)
   - Install the package
   #+BEGIN_SRC emacs-lisp
(defun ensure-package-installed (&rest packages)
  "Assure every package is installed, ask for installation if itâ€™s not.
   Return a list of installed packages or nil for every skipped package."
  (mapcar
   (lambda (package)
     (let ((refresh nil))
       (unless (package-installed-p package)
	 (if refresh
	     (package-install package)
	   (progn 
	     (package-refresh-contents)
	     (setq refresh t)
	     (package-install package))))))
   packages)
  )
   #+END_SRC
**  Packages to install
   #+BEGIN_SRC emacs-lisp
 (ensure-package-installed
  'use-package
  'mic-paren
  'solarized-theme
  'org
  'evil
  'evil-surround
  'magit
  'evil-magit 
  'ox-reveal
 )
   #+END_SRC


* Use Package
  #+BEGIN_SRC emacs-lisp
(require 'use-package)
  #+END_SRC


* Theme
  #+BEGIN_SRC emacs-lisp
(load-theme 'solarized-dark t)
  #+END_SRC
  

*  Mic Paren
  #+BEGIN_SRC emacs-lisp
(paren-activate)
(setq paren-dont-touch-blink t)
(setq paren-highlight-offscreen t)
(setq paren-match-face 'highlight)
(setq paren-sexp-mode t)
  #+END_SRC


* Ido mode
  #+BEGIN_SRC emacs-lisp
(setq indo-enable-flex-matching t)
(setq ido-everywhere t)
(ido-mode 1)
  #+END_SRC



* Evil 
  #+BEGIN_SRC emacs-lisp
    (use-package evil
      :init
      (setq evil-want-integration t) ;; This is optional since it's already set to t by default.
      (setq evil-want-keybinding nil)
      :ensure t
      :config
      (evil-mode 1))

    (use-package evil-collection
      :after evil
      :ensure t
      :config
      (evil-collection-init))

    (use-package evil-surround
      :ensure t
      :config
      (global-evil-surround-mode 1))

    (use-package evil-magit
      :ensure t)
  #+END_SRC
 
  
* Reveal

  #+BEGIN_SRC emacs-lisp
(use-package ox-reveal
  :ensure t
  :config
  (setq org-reveal-root (concat "file:///" (expand-file-name "reveal.js" user-emacs-directory))))
  #+END_SRC
  

* Remember
  #+BEGIN_SRC emacs-lisp
    (use-package remember
    :ensure t)
  #+END_SRC


* Display Relative Line Number
  Display line numbers in visual mode (counts collapsed lines as just one line).
  Displays the lines globally
  #+BEGIN_SRC emacs-lisp
(setq display-line-numbers-type 'visual)
(global-display-line-numbers-mode)
  #+END_SRC


* Org Mode configurations
  #+BEGIN_SRC emacs-lisp
    (use-package org
		 :ensure t
		 :config
		 (setq initial-major-mode 'org-mode)
		 (setq org-hide-leading-stars t)
		 (setq org-default-notes-file (concat org-directory "/notes.org"))
		 (setq org-todo-keywords
		       '((sequence "TODO" "|" "DONE")
			 (sequence "DEV" "TI" "CQ" "|" "PRD")))
		 (setq org-todo-keyword-faces
		       '(("TODO" . org-warning)
			 ("DONE" . org-done)
			 ("DEV" . "green")
			 ("TI" . "green")
			 ("CQ" . "yellow")
			 ("PRD" . "red")))
		 (setq org-pretty-entities t))
  #+END_SRC
    
   
* Ibuffer
#+BEGIN_SRC emacs-lisp
(defalias 'list-buffers 'ibuffer)
#+END_SRC


* Interface Tweaks

 #+BEGIN_SRC emacs-lisp
 (setq inhibit-startup-screen t)
 (setq initial-buffer-choice 'remember-notes)
 (menu-bar-mode -1)
 (tool-bar-mode -1)
 (scroll-bar-mode -1)
 (toggle-frame-maximized)
 #+END_SRC

 
* Global Key Mappings
 #+BEGIN_SRC emacs-lisp
(define-key global-map "\C-cc" 'org-capture)
 #+END_SRC
